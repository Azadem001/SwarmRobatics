# Define initial parameters
variable       nrun index 1
variable       maxrun equal 100
variable       n equal 0
# Loop start
label          loop

# Increase the run counter
variable       n equal ${n}+1




variable	N equal 900 # Number of particles

variable 	Seed equal  933641+1060*${n}+66*${n}+247*${n}
#variable 	Seed loop 1000 1020
variable	runtime_Main equal 10000000	# Runtime in timesteps
variable	dump_freq equal 1	# Data dumping frequency
variable	dt equal 0.001

# PARAMETERS ------------------------------------------------------------
variable	eta equal 0.0001	# Mutation intensity
variable	tau_n index 0.1 	# Alignment to forces carateristic time, negative values for fronters
variable	tau_v equal 1 		# Inertia relative to propulsion
variable	J equal 0		# Angular inertia
variable	D equal 0.5		# Angular diffusion coefficient
variable	epsilon index 0 		# -1 Fronter ; 0 ABP ; +1 Aligner
variable	alpha equal 1000	# Communication rate
variable	alphaq equal 0.01	# Reward integration rate
variable	comm_radius equal 1.122	# Communication radius
variable	controller equal 0	# Controller type (please refer to the controller table)



region          light block -15 15 -80  80 -0.2 0.2 units box

# ----------------------------------------------------------------------
# Perform a short brownian motion with a repulsive potential gradually increasing from zero
# This step is made to remove overlaps before the main run

variable	WCA_cut equal 1.122
variable 	runtime_Soft equal 50000

units           lj
dimension       3
boundary        p p p
atom_style      hybrid sphere robot

region          box block -30  30 -75  75 -0.2 0.2 units box
create_box      1 box
timestep        ${dt}


#set up equilibration run: add particles randomly to box with soft potential.
pair_style      soft ${WCA_cut}
pair_coeff      * * 0.0
variable        prefactor equal ramp(0,100) # strength of soft potential is increase slowly over time
create_atoms	1 random ${N} ${Seed} box # adding N particles randomly to the entire simulation box

fix             1 all brownian 0.0001 ${Seed} gamma_t 1.0 #run a passive brownian to remove overlaps
fix             2 all adapt 1 pair soft a * * v_prefactor
thermo		10000
run             ${runtime_Soft}
unfix		1
unfix           2

# Set up main run: change particle interactions to  WCA.
pair_style	lj/cut ${WCA_cut} 
pair_modify	shift yes #shifts LJ to become WCA
pair_coeff	* * 1 1 ${WCA_cut}  #Cutoff LJ at minima to become WCA

reset_timestep	0

# ----------------------------------------------------------------------
# Main run
 fix             evo2D all evo2D ${eta} ${D} ${tau_v} ${tau_n} ${J} ${epsilon} ${alpha} ${alphaq} ${comm_radius} light ${controller} ${Seed}  



#compute rdf all rdf 200 
#fix saverdf all ave/time 100 100 10000 c_rdf[1] c_rdf[2] file lj0.01.rdf mode vector

#dump               tj all custom ${dump_freq} evo2D31_${N}_${eta}_${D}_${tau_v}_${tau_n}_${J}_${epsilon}_${alpha}_${alphaq}_${comm_radius}_${controller}_${Seed}.cfg id x y vx vy mux muy phi0 phi1 qreward 

dump               tj3 all custom ${dump_freq} Data_${n}.txt id x qreward factive


run             ${runtime_Main}




clear 
# Check if we have reached the maximum number of runs
if "${n} < ${maxrun}" then "jump SELF loop"

# End of loop
print "Simulation completed for all runs."

